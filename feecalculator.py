# Form implementation generated from reading ui file 'feecalculator.ui'
#
# Created by: PyQt6 UI code generator 6.7.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
# By: Kenzo Kanashiro Vurbal 
# Class: BUS 442 001
# Date: 10/09/2024



from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QMessageBox  # Importing Message box from PyQt6

class Ui_Project2(object):
    def setupUi(self, Project2):
        Project2.setObjectName("Project2")
        Project2.resize(1248, 819)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        Project2.setFont(font)
        self.centralwidget = QtWidgets.QWidget(parent=Project2)
        self.centralwidget.setObjectName("centralwidget")
        self.lblFirstName = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblFirstName.setGeometry(QtCore.QRect(140, 130, 151, 21))
        self.lblFirstName.setObjectName("lblFirstName")
        self.lblLastName = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblLastName.setGeometry(QtCore.QRect(140, 160, 151, 21))
        self.lblLastName.setObjectName("lblLastName")
        self.lblAge = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblAge.setGeometry(QtCore.QRect(140, 190, 151, 21))
        self.lblAge.setObjectName("lblAge")
        self.txtFirstName = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtFirstName.setGeometry(QtCore.QRect(300, 130, 181, 20))
        self.txtFirstName.setObjectName("txtFirstName")
        self.txtLastName = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtLastName.setGeometry(QtCore.QRect(300, 160, 181, 20))
        self.txtLastName.setObjectName("txtLastName")
        self.txtAge = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtAge.setGeometry(QtCore.QRect(300, 190, 91, 20))
        self.txtAge.setObjectName("txtAge")
        self.cmbProgram = QtWidgets.QComboBox(parent=self.centralwidget)
        self.cmbProgram.setGeometry(QtCore.QRect(300, 220, 181, 22))
        self.cmbProgram.setObjectName("cmbProgram")
        self.cmbProgram.addItem("")
        self.cmbProgram.addItem("")
        self.cmbProgram.addItem("")
        self.cmbProgram.addItem("")
        self.lblProgram = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblProgram.setGeometry(QtCore.QRect(140, 220, 151, 21))
        self.lblProgram.setObjectName("lblProgram")
        self.chkInSate = QtWidgets.QCheckBox(parent=self.centralwidget)
        self.chkInSate.setGeometry(QtCore.QRect(300, 260, 81, 21))
        self.chkInSate.setObjectName("chkInSate")
        self.lblResidency = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblResidency.setGeometry(QtCore.QRect(140, 260, 151, 21))
        self.lblResidency.setObjectName("lblResidency")
        self.chkOutOfState = QtWidgets.QCheckBox(parent=self.centralwidget)
        self.chkOutOfState.setGeometry(QtCore.QRect(390, 260, 151, 21))
        self.chkOutOfState.setObjectName("chkOutOfState")
        self.btnCalculation = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnCalculation.setGeometry(QtCore.QRect(320, 290, 111, 23))
        self.btnCalculation.setObjectName("btnCalculation")
        self.btnClear = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnClear.setGeometry(QtCore.QRect(180, 290, 111, 23))
        self.btnClear.setObjectName("btnClear")
        self.lblTotalFee = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblTotalFee.setGeometry(QtCore.QRect(140, 330, 121, 21))
        self.lblTotalFee.setObjectName("lblTotalFee")
        self.txtResult = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtResult.setGeometry(QtCore.QRect(290, 330, 181, 20))
        self.txtResult.setObjectName("txtResult")
        self.btnExit = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnExit.setGeometry(QtCore.QRect(320, 370, 111, 23))
        self.btnExit.setObjectName("btnExit")
        Project2.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=Project2)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1248, 21))
        self.menubar.setObjectName("menubar")
        Project2.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=Project2)
        self.statusbar.setObjectName("statusbar")
        Project2.setStatusBar(self.statusbar)

        self.retranslateUi(Project2)
        QtCore.QMetaObject.connectSlotsByName(Project2)
     
     # Connecting the buttons to their functions
        self.btnCalculation.clicked.connect(self.FeeCalculator)
        self.btnClear.clicked.connect(self.Clear)
        self.btnExit.clicked.connect(self.Exit)


    def retranslateUi(self, Project2):
        _translate = QtCore.QCoreApplication.translate
        Project2.setWindowTitle(_translate("Project2", "College Enrollment Fee Calculator"))
        self.lblFirstName.setText(_translate("Project2", "Enter Student First Name"))
        self.lblLastName.setText(_translate("Project2", "Enter Student Last Name"))
        self.lblAge.setText(_translate("Project2", "Enter Student Age"))
        self.cmbProgram.setItemText(0, _translate("Project2", "Computer Science"))
        self.cmbProgram.setItemText(1, _translate("Project2", "Business Administration"))
        self.cmbProgram.setItemText(2, _translate("Project2", "Arts and Humanities"))
        self.cmbProgram.setItemText(3, _translate("Project2", "Sciences"))
        self.lblProgram.setText(_translate("Project2", "Enter Student Program"))
        self.chkInSate.setText(_translate("Project2", "In State"))
        self.lblResidency.setText(_translate("Project2", "Student Residency Status "))
        self.chkOutOfState.setText(_translate("Project2", "Out of State"))
        self.btnCalculation.setText(_translate("Project2", "Calcualte Fee"))
        self.btnClear.setText(_translate("Project2", "Clear"))
        self.lblTotalFee.setText(_translate("Project2", "         Total Fee"))
        self.btnExit.setText(_translate("Project2", "Exit"))
    
    def FeeCalculator(self): # Creating Function to calcualte Fee
       try:  # Retrieving User Input and storing it in variables while using try blocks for input validation
           first_name = self.txtFirstName.text()
           last_name = self.txtLastName.text()
           student_age = self.txtAge.text()
           if not all([first_name, last_name, student_age]): # Checking if user have filled all necessary input lines.
               msg = QMessageBox()
               msg.setText("Please fill all fields.")
               msg.setWindowTitle("Input Error")
               msg.exec()
               return  # Using return to stop code 
           if not first_name.isalpha() or not last_name.isalpha(): # Using isalpha to check if user have mistakenly put the age in first name or last name.
               msg = QMessageBox()
               msg.setText("First and last name must contain only words.")
               msg.setWindowTitle("First and Last Name Error")
               msg.exec()
               return
           student_age = int(student_age) # Converting age to integer and ensuring it is a positive number to check user input 
           if not 10 < student_age <= 100: # Adding  a relistic age parameter
               raise ValueError #Rasing an error to trigger MessageBox
       except ValueError:
           msg = QMessageBox()
           msg.setText("Please enter a relastic age as a whole number.")
           msg.setWindowTitle("Age Error")
           msg.exec()
           return
       program = self.cmbProgram.currentText() # Get the selected student program from the user

    # Start the calculation based on the program
       if program == "Computer Science":
           program_fee = 2000
       elif program == "Business Administration":
           program_fee = 1500
       elif program == "Arts and Humanities":
           program_fee = 1000
       elif program == "Sciences":
           program_fee = 1800
       else:
           msg = QMessageBox()
           msg.setText("Please select a program.")
           msg.setWindowTitle("Input Error")
           msg.exec()
           return 

    # Determine Tuition Based on Residency
       if self.chkInSate.isChecked() and not self.chkOutOfState.isChecked():
           tuition = 10000
       elif self.chkOutOfState.isChecked() and not self.chkInSate.isChecked():
           tuition = 15000
       else:
           msg = QMessageBox()
           msg.setText("Please select one Residency Status.")
           msg.setWindowTitle("Residency Status Error")
           msg.exec()
           return  

    # Calculate the total fee
       total_fee = tuition + program_fee
    # Display the total fee in the result box
       self.txtResult.setText(f"${total_fee:.2f}")# transforming the interger into dollars with two decimals 

        
    def Clear(self): # Creating the clear function to set input to zero 
         self.txtFirstName.clear()
         self.txtLastName.clear()
         self.txtAge.clear()
         self.cmbProgram.setCurrentIndex(0)  
         self.chkInSate.setChecked(False)
         self.chkOutOfState.setChecked(False)
         self.txtResult.clear()
    
    def Exit(self): # Creating the quit function to quit the application,
        QtCore.QCoreApplication.instance().quit() 
    


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Project2 = QtWidgets.QMainWindow()
    ui = Ui_Project2()
    ui.setupUi(Project2)
    Project2.show()
    sys.exit(app.exec())
