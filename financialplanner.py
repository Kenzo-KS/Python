# Form implementation generated from reading ui file 'financialplanner.ui'
#
# Created by: PyQt6 UI code generator 6.7.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_FinancialPlanner(object):
    def setupUi(self, FinancialPlanner):
        FinancialPlanner.setObjectName("FinancialPlanner")
        FinancialPlanner.resize(1261, 895)
        self.centralwidget = QtWidgets.QWidget(parent=FinancialPlanner)
        self.centralwidget.setObjectName("centralwidget")
        self.txtAnnualAmount = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtAnnualAmount.setGeometry(QtCore.QRect(370, 110, 113, 20))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.txtAnnualAmount.setFont(font)
        self.txtAnnualAmount.setObjectName("txtAnnualAmount")
        self.lblAnnualAmount = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblAnnualAmount.setGeometry(QtCore.QRect(196, 110, 121, 20))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.lblAnnualAmount.setFont(font)
        self.lblAnnualAmount.setObjectName("lblAnnualAmount")
        self.lblTotalTime = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblTotalTime.setGeometry(QtCore.QRect(190, 160, 121, 20))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.lblTotalTime.setFont(font)
        self.lblTotalTime.setObjectName("lblTotalTime")
        self.txtTotalTime = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtTotalTime.setGeometry(QtCore.QRect(370, 160, 113, 20))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.txtTotalTime.setFont(font)
        self.txtTotalTime.setObjectName("txtTotalTime")
        self.lstOutput = QtWidgets.QListWidget(parent=self.centralwidget)
        self.lstOutput.setGeometry(QtCore.QRect(600, 100, 256, 341))
        self.lstOutput.setObjectName("lstOutput")
        self.lblOutput = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblOutput.setGeometry(QtCore.QRect(690, 60, 81, 20))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.lblOutput.setFont(font)
        self.lblOutput.setObjectName("lblOutput")
        self.btnCalculate = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnCalculate.setGeometry(QtCore.QRect(380, 320, 75, 23))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.btnCalculate.setFont(font)
        self.btnCalculate.setObjectName("btnCalculate")
        self.chkPlan = QtWidgets.QCheckBox(parent=self.centralwidget)
        self.chkPlan.setGeometry(QtCore.QRect(380, 210, 70, 21))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.chkPlan.setFont(font)
        self.chkPlan.setObjectName("chkPlan")
        self.btnClear = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnClear.setGeometry(QtCore.QRect(220, 210, 75, 23))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.btnClear.setFont(font)
        self.btnClear.setObjectName("btnClear")
        self.btnExit = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnExit.setGeometry(QtCore.QRect(380, 420, 75, 23))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        self.btnExit.setFont(font)
        self.btnExit.setObjectName("btnExit")
        FinancialPlanner.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=FinancialPlanner)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1261, 21))
        self.menubar.setObjectName("menubar")
        FinancialPlanner.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=FinancialPlanner)
        self.statusbar.setObjectName("statusbar")
        FinancialPlanner.setStatusBar(self.statusbar)

        self.retranslateUi(FinancialPlanner)
        QtCore.QMetaObject.connectSlotsByName(FinancialPlanner)
        # Creating a the occurances 
        self.btnCalculate.clicked.connect(self.calculate)
        # Creating clear occurances  
        self.btnClear.clicked.connect(self.clear)
        # Creating exit occurances 
        self.btnExit.clicked.connect(self.application_exit)
        
    def retranslateUi(self, FinancialPlanner):
        _translate = QtCore.QCoreApplication.translate
        FinancialPlanner.setWindowTitle(_translate("FinancialPlanner", "Financial Planner"))
        self.lblAnnualAmount.setText(_translate("FinancialPlanner", "Enter Annaul Amount"))
        self.lblTotalTime.setText(_translate("FinancialPlanner", "Enter Total Time (Years)"))
        self.lblOutput.setText(_translate("FinancialPlannepython financialplanner.pyr", "Portafolio Value"))
        self.btnCalculate.setText(_translate("FinancialPlanner", "Calculate"))
        self.chkPlan.setText(_translate("FinancialPlanner", "Plan 2040"))
        self.btnClear.setText(_translate("FinancialPlanner", "Clear"))
        self.btnExit.setText(_translate("FinancialPlanner", "Exit"))
 
    def calculate(self): # creating a new function 
            annual_ammount = self.txtAnnualAmount.text()# Storing user input into varaibles
            total_time = self.txtTotalTime.text()
            current_portafolio_value = 0 # Track of the portafolio and time
            years = 0 
            
            if(annual_ammount.isdigit() and total_time.isdigit()): # User Validion
                annual_ammount = int(annual_ammount) # converting the variables into integers
                total_time = int(total_time)
                
                if(self.chkPlan.isChecked()): # Using the check box pytq widget to define the rate
                    rate = 7.0 
                else:
                    rate = 5.0
                self.lstOutput.addItem("Year"+ "   " + "Current Portafolio Value") 
                for each_year in range(0,total_time): #Creating a new variable base on the user input Total Time is the maximum
                    current_portafolio_value = ( current_portafolio_value + annual_ammount) * (1 + rate/100)
                    years = years + 1
                    currency = f"${current_portafolio_value:,.2f}" #Integer to USD and limited to 2 decimals
                    self.lstOutput.addItem(str(years)+ "  " + currency)
                    
            else: # If user input is incorrect we will display a message
                msg = QtWidgets.QMessageBox()
                msg.setWindowTitle("Financial Planner")
                msg.setText("Please enter a valid input for annual amount and time taken")
                msg.exec()
                
            
            
    def clear(self):# creating clear function 
        self.txtAnnualAmount.clear()
        self.txtTotalTime.clear()
        self.lstOutput.clear()
        self.chkPlan.setChecked(False)
    def application_exit(self):
        QtWidgets.QApplication.quit()
    
  
        
        


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    FinancialPlanner = QtWidgets.QMainWindow()
    ui = Ui_FinancialPlanner()
    ui.setupUi(FinancialPlanner)
    FinancialPlanner.show()
    sys.exit(app.exec())
