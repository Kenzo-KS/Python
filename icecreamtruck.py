# Form implementation generated from reading ui file 'icecreamtruck.ui'
#
# Created by: PyQt6 UI code generator 6.7.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

# By: Kenzo Kanashiro Vurbal 
# Class: BUS 442 001
# Date: 9/21/2024

from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QMessageBox  # Importing Message box from PyQt6


class Ui_IceCreamTruck(object):
    def setupUi(self, IceCreamTruck):
        IceCreamTruck.setObjectName("IceCreamTruck")
        IceCreamTruck.resize(1888, 930)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        IceCreamTruck.setFont(font)
        self.centralwidget = QtWidgets.QWidget(parent=IceCreamTruck)
        self.centralwidget.setObjectName("centralwidget")
        self.lblIceCones = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblIceCones.setGeometry(QtCore.QRect(340, 200, 91, 31))
        self.lblIceCones.setObjectName("lblIceCones")
        self.lblSandwiches = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblSandwiches.setGeometry(QtCore.QRect(340, 260, 121, 31))
        self.lblSandwiches.setObjectName("lblSandwiches")
        self.lblSoftServes = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblSoftServes.setGeometry(QtCore.QRect(340, 150, 61, 31))
        self.lblSoftServes.setObjectName("lblSoftServes")
        self.lblItems = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblItems.setGeometry(QtCore.QRect(330, 110, 91, 31))
        self.lblItems.setObjectName("lblItems")
        self.lblPrices = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblPrices.setGeometry(QtCore.QRect(480, 110, 71, 31))
        self.lblPrices.setObjectName("lblPrices")
        self.lblConePrice = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblConePrice.setGeometry(QtCore.QRect(500, 200, 41, 31))
        self.lblConePrice.setObjectName("lblConePrice")
        self.lblSandwichesPrices = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblSandwichesPrices.setGeometry(QtCore.QRect(500, 260, 41, 31))
        self.lblSandwichesPrices.setObjectName("lblSandwichesPrices")
        self.lblSoftServesPrice = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblSoftServesPrice.setGeometry(QtCore.QRect(500, 150, 41, 31))
        self.lblSoftServesPrice.setObjectName("lblSoftServesPrice")
        self.lblQuantites = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblQuantites.setGeometry(QtCore.QRect(600, 110, 61, 31))
        self.lblQuantites.setObjectName("lblQuantites")
        self.txtCones = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtCones.setGeometry(QtCore.QRect(590, 200, 71, 20))
        self.txtCones.setObjectName("txtCones")
        self.txtSandwiches = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtSandwiches.setGeometry(QtCore.QRect(590, 270, 71, 20))
        self.txtSandwiches.setObjectName("txtSandwiches")
        self.txtSoftServes = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtSoftServes.setGeometry(QtCore.QRect(590, 150, 71, 20))
        self.txtSoftServes.setObjectName("txtSoftServes")
        self.btnCheckOut = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnCheckOut.setGeometry(QtCore.QRect(590, 320, 75, 23))
        self.btnCheckOut.setObjectName("btnCheckOut")
        self.lblTotlal = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblTotlal.setGeometry(QtCore.QRect(430, 370, 121, 31))
        self.lblTotlal.setObjectName("lblTotlal")
        self.txtTotalAmount = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtTotalAmount.setGeometry(QtCore.QRect(560, 380, 111, 20))
        self.txtTotalAmount.setObjectName("txtTotalAmount")
        self.btnClear = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnClear.setGeometry(QtCore.QRect(470, 320, 75, 23))
        self.btnClear.setObjectName("btnClear")
        self.lblTruckName = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblTruckName.setGeometry(QtCore.QRect(420, 80, 161, 31))
        self.lblTruckName.setObjectName("lblTruckName")
        IceCreamTruck.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=IceCreamTruck)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1888, 21))
        self.menubar.setObjectName("menubar")
        IceCreamTruck.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=IceCreamTruck)
        self.statusbar.setObjectName("statusbar")
        IceCreamTruck.setStatusBar(self.statusbar)
        

        self.retranslateUi(IceCreamTruck)
        QtCore.QMetaObject.connectSlotsByName(IceCreamTruck)
        
        self.btnCheckOut.clicked.connect(self.CheckOutEvent) # Creating the event to call the self calculation function.
        self.btnClear.clicked.connect(self.ClearInput) # Creating an event to call the clear input function.

    def retranslateUi(self, IceCreamTruck):
        _translate = QtCore.QCoreApplication.translate
        IceCreamTruck.setWindowTitle(_translate("IceCreamTruck", "The Kanashiro Ice Cream Truck "))
        self.lblIceCones.setText(_translate("IceCreamTruck", "Ice Cream Cone"))
        self.lblSandwiches.setText(_translate("IceCreamTruck", "Ice Cream Sandwiches"))
        self.lblSoftServes.setText(_translate("IceCreamTruck", "Soft Serves"))
        self.lblItems.setText(_translate("IceCreamTruck", "       Items"))
        self.lblPrices.setText(_translate("IceCreamTruck", "Prices in USD"))
        self.lblConePrice.setText(_translate("IceCreamTruck", "3.00   "))
        self.lblSandwichesPrices.setText(_translate("IceCreamTruck", "4.00    "))
        self.lblSoftServesPrice.setText(_translate("IceCreamTruck", "2.50    "))
        self.lblQuantites.setText(_translate("IceCreamTruck", "Quantities"))
        self.btnCheckOut.setText(_translate("IceCreamTruck", "Checkout"))
        self.lblTotlal.setText(_translate("IceCreamTruck", "Total Amount in USD"))
        self.btnClear.setText(_translate("IceCreamTruck", "Clear"))
        self.lblTruckName.setText(_translate("IceCreamTruck", "The Kanashiro Ice Cream Truck"))
        
    def CheckOutEvent(self):
         try: # Applying the try-except function to check and troubleshoot the user input error.
             soft_quantity = self.txtSoftServes.text()# Retriving the quantity entered by the user for soft drinks and stored in soft_quantity variable. 
             if soft_quantity == "":   
                 soft_quantity = 0 # If the user does provide no input, the default value will be zero.
             else:
                 soft_quantity = int(soft_quantity) # Converting the soft_quantity variable into an integer with the purpose of flagging possible errors such as decimals and string inputs.      
             if soft_quantity < 0: # Check if numbers are positive; display a message box if not.
                 msg = QMessageBox()
                 msg.setText("Please enter a whole number for soft serves")
                 msg.setWindowTitle("Checkout Error")
                 msg.exec()
                 return # Using return to end the function and display the message.
         except ValueError: # If errors are flag the error message will be display.
                msg = QMessageBox()
                msg.setText("Please enter a valid number of soft serves")
                msg.setWindowTitle("Checkout Error")
                msg.exec()
                return # Ending the function.
         
         try:  # Applying the same variable creation and input validation for ice cream cones.
            cones_quantity = self.txtCones.text() 
            if cones_quantity == "":  
                cones_quantity = 0
            else:
                cones_quantity = int(cones_quantity)
            if cones_quantity < 0: 
                msg = QMessageBox()
                msg.setText("Please enter a whole number for cones")
                msg.setWindowTitle("Checkout Error")
                msg.exec()
                return 
         except ValueError: 
             msg = QMessageBox()
             msg.setText(" Please enter a valid number for cones")
             msg.setWindowTitle("Checkout Error")
             msg.exec()
             return  
         
                
         try: # Applying the same variable creation and input validation for ice cream sandwiches. 
             sandwiches_quantity = self.txtSandwiches.text()
             if sandwiches_quantity =="":
                 sandwiches_quantity = 0
             else: 
                 sandwiches_quantity = int(sandwiches_quantity) 
             if sandwiches_quantity < 0:
                 msg = QMessageBox()
                 msg.setText("Please enter a whole number of ice cream sandwiches")
                 msg.setWindowTitle("Checkout Error")
                 msg.exec()
                 return
         except  ValueError:
                msg = QMessageBox()
                msg.setText("Please enter a valid number of ice cream sandwiches")
                msg.setWindowTitle("Check out Error")
                msg.exec()
         
    # Setting Prodcuts Prices.
         cone_price = 3.00 
         soft_price = 2.50
         sandwich_price = 4.00
        
     # Calcualting Total Cost.
         total_cost = (cone_price * cones_quantity) + (soft_quantity * soft_price) + (sandwiches_quantity * sandwich_price)
       
     # Displaying Total Cost. 
         self.txtTotalAmount.setText(str(total_cost))
        
    
    def ClearInput(self): # Creating a new function to clear all the inputs and the customer amount by the customer.
        self.txtCones.setText("")
        self.txtSoftServes.setText("")
        self.txtSandwiches.setText("")
        self.txtTotalAmount.setText("")

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    IceCreamTruck = QtWidgets.QMainWindow()
    ui = Ui_IceCreamTruck()
    ui.setupUi(IceCreamTruck)
    IceCreamTruck.show()
    sys.exit(app.exec())
    
  # -- END OF PROJECT 1 
